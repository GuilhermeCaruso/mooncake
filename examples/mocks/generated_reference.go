// ############################
// Generated by Mooncake
// Date: 2022-08-28 04:07:19
// Source: examples/interfaces/reference.go
// ############################
package mocks

import (
	"reflect"
	"github.com/GuilhermeCaruso/mooncake"
)
type MockReference struct {
	agent              *mooncake.MooncakeAgent
	internalController *InternalMockReference
}

func NewMockReference(agent *mooncake.MooncakeAgent) *MockReference {
	internal := new(MockReference)
	internal.agent = agent
	internal.internalController = &InternalMockReference{
		mock: internal,
	}
	return internal
}

func(m *MockReference) Get() (result0 string, result1 error) {
	method := "Get"

	result := m.agent.GetCall(method)

	result0,_ = result[0].Value.(string)
	result1,_ = result[1].Value.(error)

	return
}


func (immi *MockReference) Prepare() *InternalMockReference {
	return immi.internalController
}

type InternalMockReference struct {
	mock *MockReference
}


func (im *InternalMockReference) Get() *mooncake.AgentController {
	method := "Get"
	methodType := reflect.TypeOf((*MockReference)(nil).Get)

	return im.mock.agent.SetCall(method, methodType)
}

